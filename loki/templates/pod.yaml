apiVersion: v1
kind: Pod
metadata:
  name: loki
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  terminationGracePeriodSeconds: 60
  securityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  volumes:
    - name: cache
      emptyDir:
        sizeLimit: 500Mi
    - name: config
      configMap:
        name: loki
        items:
          - key: loki.yaml
            path: loki.yaml
  containers:
    - name: loki
      image: docker.io/grafana/loki:{{ .Values.version }}
      imagePullPolicy: IfNotPresent
      args:
        - -config.file=/etc/loki/loki.yaml
        - -target=all
        - -config.expand-env=true
      env:
        - name: S3_BUCKET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: S3_BUCKET
        - name: S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: S3_ENDPOINT
        - name: S3_REGION
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: S3_REGION
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: S3_SECRET_KEY
      securityContext:
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false
      resources:
        requests:
          memory: "100Mi"
          cpu: "10m"
        limits:
          memory: "250Mi"
          cpu: "100m"
      volumeMounts:
        - name: cache
          mountPath: /tmp/loki
        - name: config
          mountPath: /etc/loki
      ports:
        - containerPort: 3100
          name: http
          protocol: TCP
      startupProbe:
        httpGet:
          path: /ready
          port: http
        failureThreshold: 30
        periodSeconds: 10
        timeoutSeconds: 1
      readinessProbe:
        httpGet:
          path: /ready
          port: http
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 1
        failureThreshold: 3
      livenessProbe:
        httpGet:
          path: /ready
          port: http
        initialDelaySeconds: 60
        periodSeconds: 30
        timeoutSeconds: 1
        failureThreshold: 3
      