# Loki components:
#
# 1. Distributor
# The distributor service is responsible for handling incoming push requests
# from clients to ingester.
#
# 2. Ingester
# The ingester service is responsible for persisting data and shipping it to
# long-term storage.
#
# 3. Query Frontend
# The query frontend is an optional service providing the querierâ€™s API
# endpoints and can be used to accelerate the read path.
#
# 4. Query Scheduler
# The query scheduler is an optional service providing more advanced queuing
# functionality than the query frontend. 
#
# 5. Querier
# The querier service is responsible for executing Log Query Language (LogQL)
# queries.
#
# 6. Index Gateway
# The index gateway service is responsible for handling and serving metadata
# queries. 
#
# 7. Compactor
# The compactor service is used by "shipper stores", such as single store TSDB
# or single store BoltDB, to compact the multiple index files produced by the
# ingesters and shipped to object storage into single index files per day and
# tenant.
#
# 8. Ruler
# The ruler service manages and evaluates rule and/or alert expressions
# provided in a rule configuration.
# 
#
# Docs:
# https://grafana.com/docs/loki/latest/get-started/components/
# https://grafana.com/docs/loki/latest/configure
config:
  # A comma-separated list of components to run
  target: all

  # Enables authentication through the X-Scope-OrgID header, which must be 
  # present if true. If false, the OrgID will always be set to 'fake'.
  auth_enabled: false

  # Configures the server of the launched module(s)
  server:
    http_listen_port: 3100
    grpc_listen_port: 9095
    log_level: debug
    log_format: logfmt

  # Configures the ingester
  ingester:
    wal:
      enabled: true
      dir: /loki/wal
      flush_on_shutdown: true
  
  # Configures the compactor
  compactor:
    working_directory: /loki/compactor
    retention_enabled: true
    delete_request_store: s3

  # The ruler block configures the Loki ruler.
  ruler:
    storage:
      type: s3
      s3:
        bucketnames: "{{ .Values.s3.buckets.rulers }}"

  # Common configuration to be shared between multiple components
  common:
    # Replication factor for distributor
    replication_factor: 3
    # Define Distributor, Ingester and Compactor ring
    ring:
      kvstore:
        store: memberlist
    # Define s3 credentials used by Ingester, Compactor and Ruler
    storage:
      s3:
        s3forcepathstyle: false
        endpoint: ${S3_ENDPOINT}
        region: ${S3_REGION}
        access_key_id: ${S3_ACCESS_KEY}
        secret_access_key: ${S3_SECRET_KEY}
  
  memberlist:
    join_members:
      - "dnssrv+loki.{{ .Release.Namespace }}.svc.cluster.local:7946"

  limits_config:
    allow_structured_metadata: true
    max_cache_freshness_per_query: 10m
    query_timeout: 10s
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    retention_period: 672h # 28 days
    split_queries_by_interval: 15m
    volume_enabled: true

  # Configuration for analytics.
  analytics:
    reporting_enabled: false

  pattern_ingester:
    enabled: true

  storage_config:
    tsdb_shipper:
      active_index_directory: /loki/index
      cache_location: /loki/index_cache
      cache_ttl: 24h # Can be increased for faster performance over longer query periods, uses more disk space
    aws:
      bucketnames: "{{ .Values.s3.buckets.chunks }}"
  
  # Configures the chunk index schema and where it is stored.
  schema_config:
    configs:
      - from: 2025-01-21
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: index_
          period: 24h
        chunks:
          prefix: chunks_
  
# Loki version
version: "3.3.2"

# Replica count
replicas: 3

# Loki S3 secret
secret: null

# Loki volume
volume:
  size: 1Gi
  storageClass: null

s3:
  buckets:
    chunks: null
    rulers: null

resources:
  requests:
    memory: "100Mi"
    cpu: "10m"
  limits:
    memory: "250Mi"
    cpu: "100m"